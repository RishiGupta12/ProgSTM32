#!/bin/bash
#
# Copyright (C) 2018, Rishi Gupta. All rights reserved.
#

dnl Process this file with Autoconf to produce a portable
dnl configure script.

dnl Add custom copyright information
AC_COPYRIGHT(Copyright (C)2018 Rishi Gupta. All rights reserved.)

dnl Specify minimum version of autoconf required
AC_PREREQ(2.68)

dnl Package version will remain constant unless edited manually
dnl by modifying package_version file
m4_define([CURRENT_VERSION],
     m4_esyscmd([ if test -e package_version; then
                     . ./package_version
                     printf "$PACKAGE_VERSION"
                  else
                     printf "unknown"
                  fi ]))

dnl Process any command-line arguments and perform initialization 
dnl and verification
AC_INIT([flashSTM32], [CURRENT_VERSION], [gupt21@gmail.com])

dnl Instantiating macro to generate config.h for passing #DEFINE
dnl to source code
AC_CONFIG_HEADERS([config.h])

dnl Central place to that will contain all custom macros
AC_CONFIG_MACRO_DIR([m4])

dnl Automake options that should be applied to every Makefile.am 
dnl in the tree
AM_INIT_AUTOMAKE([foreign 1.11 serial-tests -Wall -Wno-portability subdir-objects silent-rules color-tests dist-xz tar-ustar])

dnl Compute the canonical host-system type variable, host, 
dnl host_cpu, host_vendor, and host_os
AC_CANONICAL_HOST
AC_DEFINE_UNQUOTED([CANONICAL_HOST], "$host", [Canonical host string.])

dnl Add tests so that the generated libtool script will understand 
dnl the characteristics of the host
LT_INIT

dnl Determine a C compiler to use
AC_PROG_CC

dnl Set output variable INSTALL to the name of a BSD-compatible install 
dnl program, if one is found in the current PATH. Otherwise, set INSTALL 
dnl to ‘dir/install-sh -c’
AC_PROG_INSTALL

dnl Check for each program and if found set variable to the name of that 
dnl program
AC_CHECK_PROGS([M4], gm4 m4, no)

pdir=`pwd`
AC_SUBST(pdir)

AS_IF([test -f $pdir/flashstm32.mk],
  [echo '# flashstm32.mk generated by configure.' > $pdir/flashstm32.mk]
  [echo "# @configure_input@" >> $pdir/flashstm32.mk]
  [echo "" >> $pdir/flashstm32.mk], [AC_MSG_ERROR([Couldn't find flashstm32.mk])])

AS_IF([test -f $pdir/scripts/colorchk.sh],
  [source $pdir/scripts/colorchk.sh]
  [chk_termcolor_support $pdir/flashstm32.mk], [AC_MSG_ERROR([Couldn't find scripts/colorchk.sh])])

dnl List of makefiles that automake should generate
AC_CONFIG_FILES([
Makefile
sdk/Makefile
])

dnl Generate config.status and launch it, run the configuration action
dnl now
AC_OUTPUT

dnl
AC_DEFUN([AX_SUMMARIZE_ENV],
[
BUILD_USER=${USER}
BUILD_ARCH=${host}
BUILD_HOST=${ac_hostname}
BUILD_DATE=$(date +'%F %H:%M')

AC_DEFINE_UNQUOTED([BUILD_USER], "${BUILD_USER}", [The fine user who built the package])
AC_DEFINE_UNQUOTED([BUILD_ARCH], "${BUILD_ARCH}", [Architecture of the build host])
AC_DEFINE_UNQUOTED([BUILD_HOST], "${BUILD_HOST}", [Build host name])
AC_DEFINE_UNQUOTED([BUILD_DATE], "${BUILD_DATE}", [Build date])

AC_SUBST(BUILD_USER)
AC_SUBST(BUILD_ARCH)
AC_SUBST(BUILD_HOST)
AC_SUBST(BUILD_DATE)
AC_SUBST(BUILD_VERSION)
])

AC_DEFUN([AX_SUMMARIZE_CONFIG],
[
echo
echo '------------------------------------------------'
echo '|                  SUMMARY                     |'
echo '------------------------------------------------'
echo
echo Configure date................ : $BUILD_DATE
echo Package version............... : $PACKAGE-$VERSION
echo C compiler.................... : $CC
echo Build architecture............ : $BUILD_ARCH
echo C compiler flags.............. : $CFLAGS
echo
echo Configure complete! Now proceed with:
echo " - 'make'           compile the libraries/binaries"
echo " - 'make V=s'       to print extra logs from make while building"
echo " - 'make check'     run automated tests"
echo " - 'make install'   install the libraries/binaries/files in output/product folder"
echo
])

AX_SUMMARIZE_ENV
AX_SUMMARIZE_CONFIG

